<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro">

    <ros2_control name="GazeboSystem" type="system">
        <hardware>
            <plugin>ign_ros2_control/IgnitionSystem</plugin>
        </hardware>
        <joint name="front_left_wheel_joint">
            <command_interface name="velocity">
                <param name="min">-10</param>
                <param name="max">10</param>
            </command_interface>
            <state_interface name="velocity" />
            <state_interface name="position" />
        </joint>
        <joint name="front_right_wheel_joint">
            <command_interface name="velocity">
                <param name="min">-10</param>
                <param name="max">10</param>
            </command_interface>
            <state_interface name="velocity" />
            <state_interface name="position" />
        </joint>
        <joint name="rear_left_wheel_joint">
            <command_interface name="velocity">
                <param name="min">-10</param>
                <param name="max">10</param>
            </command_interface>
            <state_interface name="velocity" />
            <state_interface name="position" />
        </joint>
        <joint name="rear_right_wheel_joint">
            <command_interface name="velocity">
                <param name="min">-10</param>
                <param name="max">10</param>
            </command_interface>
            <state_interface name="velocity" />
            <state_interface name="position" />
        </joint>
        <joint name="left_diff_unit_joint">
            <command_interface name="position">
                <param name="min">-0.4</param>
                <param name="max">0.4</param>
            </command_interface>
            <state_interface name="position">
                <param name="initial_value">0.0</param>
              </state_interface>
              <state_interface name="velocity"/>
              <state_interface name="effort"/>
        </joint>
        <joint name="right_diff_unit_joint">
            <command_interface name="position">
                <param name="min">-0.4</param>
                <param name="max">0.4</param>
            </command_interface>
            <state_interface name="position">
                <param name="initial_value">0.0</param>
              </state_interface>
              <state_interface name="velocity"/>
              <state_interface name="effort"/>
        </joint>
    </ros2_control>

    <!-- ROS2 Jazzy -->
    <!-- 
    <ros2_control name="GazeboSystem" type="system">
        <hardware>
            <plugin>gz_ros2_control/GazeboSimSystem</plugin>
        </hardware>
        <joint name="front_left_wheel_joint">
            <command_interface name="velocity">
                <param name="min">-10</param>
                <param name="max">10</param>
            </command_interface>
            <state_interface name="velocity" />
            <state_interface name="position" />
        </joint>
        <joint name="front_right_wheel_joint">
            <command_interface name="velocity">
                <param name="min">-10</param>
                <param name="max">10</param>
            </command_interface>
            <state_interface name="velocity" />
            <state_interface name="position" />
        </joint>
    </ros2_control>
    <gazebo>
        <plugin name="gz_ros2_control::GazeboSimROS2ControlPlugin" filename="libgz_ros2_control-system.so">
            <parameters>$(find rover_gazebo)/config/robot_control.yaml</parameters>
        </plugin>
    </gazebo> -->


    <!-- ROS2 Humble -->
    <!-- integrates ros2 control with gazebo allowing the robot to be controlled using ros2 controllers -->
    
    <gazebo>
        <plugin filename="ign_ros2_control-system"
            name="ign_ros2_control::IgnitionROS2ControlPlugin">
            <robot_param>robot_description</robot_param>
            <robot_param_node>robot_state_publisher</robot_param_node>
            <parameters>$(find rover_description)/config/robot_control.yaml</parameters>
        </plugin>
    </gazebo>


    <!-- Gazebo Diff Drive -->
    <!-- Simulates a differential drive systems for mobile robot -->
    <gazebo>
        <plugin name="gz::sim::systems::DiffDrive" filename="gz-sim-diff-drive-system">

            <!-- Wheel Information -->
            <left_joint>front_left_wheel_joint</left_joint>
            <left_joint>rear_left_wheel_joint</left_joint>

            <right_joint>front_right_wheel_joint</right_joint>
            <right_joint>rear_right_wheel_joint</right_joint>

            <wheel_radius>0.305</wheel_radius>
            <wheel_separation>1.386</wheel_separation>
            <max_linear_acceleration>1.0</max_linear_acceleration>

            <!-- Input -->
            <topic>cmd_vel</topic>

            <!-- Output -->
            <frame_id>odom</frame_id>
            <child_frame_id>base_link</child_frame_id>
            <odom_topic>odom</odom_topic>
            <odom_publisher_frequency>50</odom_publisher_frequency>

            <tf_topic>/tf</tf_topic>
        </plugin>

        <!-- Gazebo Joint States - Used without ROS2 control-->
        <!-- Publish the state  of the robots joint eg position, velocity to the joint_states topic -->
        <plugin filename="gz-sim-joint-state-publisher-system"
            name="gz::sim::systems::JointStatePublisher">
            <topic>joint_states</topic>
            <joint_name>front_left_wheel_joint</joint_name>
            <joint_name>front_right_wheel_joint</joint_name>
            <joint_name>rear_left_wheel_joint</joint_name>
            <joint_name>rear_right_wheel_joint</joint_name>
            <joint_name>left_diff_unit_joint</joint_name>
            <joint_name>right_diff_unit_joint</joint_name>
        </plugin>

    </gazebo>

    <!-- Camera -->
    <!-- <joint name="camera_joint" type="fixed">
        <parent link="chassis"/>
        <child link="camera_link"/>
        <origin xyz="0.276 0 0.181" rpy="0 0.18 0"/>
    </joint>

    <link name="camera_link">
        <visual>
            <geometry>
                <box size="0.010 0.03 0.03"/>
            </geometry>
            <material name="black"/>
        </visual>
        <visual>
            <origin xyz="0 0 -0.05"/>
            <geometry>
                <cylinder radius="0.002" length="0.1"/>
            </geometry>
            <material name="black"/>
        </visual>
    </link>


    <joint name="camera_optical_joint" type="fixed">
        <parent link="camera_link"/>
        <child link="camera_link_optical"/>
        <origin xyz="0 0 0" rpy="${-pi/2} 0 ${-pi/2}"/>
    </joint>

    <link name="camera_link_optical"></link>

    <gazebo reference="camera_link">
        <material>Gazebo/Black</material>

        <sensor name="camera" type="camera">
            <pose> 0 0 0 0 0 0 </pose>
            <visualize>true</visualize>
            <update_rate>10</update_rate>
            <camera>
                <horizontal_fov>1.089</horizontal_fov>
                <image>
                    <format>R8G8B8</format>
                    <width>640</width>
                    <height>480</height>
                </image>
                <clip>
                    <near>0.05</near>
                    <far>8.0</far>
                </clip>
            </camera>
            <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
                <frame_name>camera_link_optical</frame_name>
            </plugin>
        </sensor>
    </gazebo> -->

    <!-- Lidar -->
    <!-- <joint name="laser_joint" type="fixed">
        <parent link="chassis"/>
        <child link="laser_frame"/>
        <origin xyz="0.122 0 0.212" rpy="0 0 0"/>
    </joint>

    <link name="laser_frame">
        <visual>
            <geometry>
                <cylinder radius="0.05" length="0.04"/>
            </geometry>
            <material name="black"/>
        </visual>
        <visual>
            <origin xyz="0 0 -0.05"/>
            <geometry>
                <cylinder radius="0.01" length="0.1"/>
            </geometry>
            <material name="black"/>
        </visual>
        <collision>
            <geometry>
                <cylinder radius="0.05" length="0.04"/>
            </geometry>
        </collision>
        <xacro:inertial_cylinder mass="0.1" length="0.04" radius="0.05">
            <origin xyz="0 0 0" rpy="0 0 0"/>
        </xacro:inertial_cylinder>
    </link>

    <gazebo reference="laser_frame">
        <material>Gazebo/Black</material>

        <sensor name="laser" type="ray">
            <pose> 0 0 0 0 0 0 </pose>
            <visualize>false</visualize>
            <update_rate>10</update_rate>
            <ray>
                <scan>
                    <horizontal>
                        <samples>360</samples>
                        <min_angle>-3.14</min_angle>
                        <max_angle>3.14</max_angle>
                    </horizontal>
                </scan>
                <range>
                    <min>0.3</min>
                    <max>12</max>
                </range>
            </ray>
            <plugin name="laser_controller" filename="libgazebo_ros_ray_sensor.so">
                <ros>
                    <argument>~/out:=scan</argument>
                </ros>
                <output_type>sensor_msgs/LaserScan</output_type>
                <frame_name>laser_frame</frame_name>
            </plugin>
        </sensor>
    </gazebo> -->

</robot>